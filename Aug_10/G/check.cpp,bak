#include <bits/stdc++.h>
using namespace std;
const int kMaxN = 16;
int a[kMaxN][kMaxN],b[kMaxN][kMaxN];
int n;

void out_row(int r, string fenge) {
	for (int j = 0; j < n; ++j)
		if (a[r][j] != -1)
			cout<<a[r][j]<<fenge;
		else
			cout<<0<<fenge;
	cout<<endl;
}

int cal(int x,int y) {
	int t = 0;
	for (int j = 0; j < n; ++j)
		t += a[x][j]*a[y][j];
	/*
	 if (t != 0) {
		cout<<"wrong! "<<" t = "<<t<<endl;
		cout<<"row1 = "<<x<<"\trow2 = "<<y<<endl;
		out_row(x, ", ");
		out_row(y, ", ");
	}
	*/
	return t;
}

void out() {
	for (int i = 0; i < n; ++i)
		out_row(i, " ");
}

void rotate(int top, int left, int bottom, int right) {
	int row_sum = top + bottom;
	int col_sum = left + right;
	for (int i = top; i <= row_sum/2; ++i)
		for (int j = left; j <= right; ++j)
			swap(b[i][j], b[row_sum-i][col_sum-j]);
}

void copy_from_b_to_a(int si, int sj, int rn,int cn, int di, int dj) {
	for (int i = 0; i < rn; ++i)
		for (int j = 0; j < cn; ++j)
			a[di+i][dj+j] = b[si+i][sj+j];
}

void copy_from_a_to_b(int si, int sj, int rn,int cn, int di, int dj) {
	for (int i = 0; i < rn; ++i)
		for (int j = 0; j < cn; ++j)
			b[di+i][dj+j] = a[si+i][sj+j];
}

void add_one(vector<int>&a,int n, bool &not_zero) {
	int t = 1, ci;
	for (int i = 0; i < n; ++i) {
		ci = t&a[i];
		a[i] ^= t;
		t = ci;
	}
	not_zero = t^1;
}

bool is_ok() {
	for (int i = 0;i < n; ++i) {
		for (int j = i+1;j < n; ++j) {
			int t = cal(i,j);
			if (t != 0) return false;
		}
	}
	return true;
}

int main() {
	cin>>n;
	vector<int>aa(n*n,0);
	bool not_zero =false;
	bool first = true;
	int s_cnt = 0;
	string tline(80,'#'), bline(80,'_');
	set<int>ssss;
	while (first || not_zero) {
		first = false;
		for (int i = 0; i < n; ++i)
			for (int j = 0;j < n; ++j) {
				a[i][j] = aa[i*n+j];
				if (0 == a[i][j])
					a[i][j] = -1;
			}
		if (is_ok()) {
			cout<<tline<<endl;
			cout<<"solution"<< ++s_cnt<<endl;
			out();
			int tmp = 0;
			for (int k = 0; k < n*n; ++k)
				tmp += aa[k];
			cout<<"0,1个数差"<<abs(n*n-2*tmp)<<endl;
			ssss.insert(abs(n*n-2*tmp));
			cout<<bline<<endl;
		}
		add_one(aa, n*n, not_zero);
	}
	cout<<tline<<endl;
	cout<<tline<<endl;
	for (auto v:ssss)
		cout<<v<<endl;
	/* for (int i = 0;i < n; ++i)
		for (int j = 0;j < n; ++j) {
			cin>>a[i][j];
			if (a[i][j] == 0) a[i][j] = -1;
		}
	*/
	// copy_from_a_to_b(0,0,n,n,0,0);
	/* */
	return 0;
}